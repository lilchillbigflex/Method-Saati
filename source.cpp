#include <iostream>
#include <math.h>
using namespace std;
int main()
{
	setlocale(LC_ALL, "rus");
	int n; //кол-во критериев
	double sum1 = 0;
	double sum2 = 0;
	cout << "Enter quantity of criteria: ";
	cin >> n;
	double** arr = new double* [n + 2];   // создаем динамический двумерный массив рвзмерностью n+2 (n - количество критериев, делаем n+1 Так как нам нужны еще два столбика после матрицы криетриев, лишние строчки просто не выведем      
	for (int i = 0; i < n + 2; i++) {
		arr[i] = new double[n + 2];
	}
	for (int i = 0; i < n; i++)
	{																		//выставляем такие значения в циклах for, чтобы запросы на ввод были только по позициям выше главной диагонали матрицы (можно сделать только для тех, что ниже, для этого нужно поменять местами i и j, дальше такая расстановка представлена в расчете остальных значений)
		for (int j = i + 1; j < n; j++)
		{
			cout << "Enter data of comparison for criteria " << i + 1 << " and " << j + 1 << " : "; 
			cin >> arr[i][j];                                                                            //вводим данные попарного сравнения
		}
	}
	for (int i = 0; i < n; i++)
	{
			arr[i][i] = 1;                   //задаем данные попарного сравнения по диагонали (каждый критерий с самим собой) равными единице
	}
	for (int j = 0; j < n; j++)
	{										 // выставляем i и j так чтобы рассчет происходил только для остальных позиций (тех, что ниже главной диагонали)
		for (int i = j + 1; i < n; i++)
		{
			arr[i][j] = 1 / arr[j][i];       //расчитываем данные попарного сравнения для позиций ниже главной диагонали матрицы
		}
	}

	for (int i = 0; i < n; i++)
	{
		arr[i][n] = 0;
		for (int j = 0; j < n; j++)
		{
			arr[i][n] += arr[i][j];           //рассчитываем сумму по строке
		}
	}

	for (int i = 0; i < n; i++)
	{

		for (int j = 0; j < n; j++)
		{
		}
		sum1 += arr[i][n];                   // рассчитваем сумму всех сумм по строкам
	}

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			arr[i][n + 1] = arr[i][n] / sum1;   //рассчитываем  весовые коэффициенты для каждой строки
		}
	}

	for (int i = 0; i < n; i++)
	{

		for (int j = 0; j < n; j++)
		{
		}
		sum2 += arr[i][n + 1];					//рассчитываем сумму всех весовых коэффициентов
	}

	cout << endl;
	for (int i = 0; i < n; i++)
	{

		for (int j = 0; j < n + 2; j++)
		{
			cout << round(arr[i][j] * 100) / 100 << "                "; //выводим массив (таблицу) 

		}
		cout << endl;
	}
	cout << "\nSumm of all summs: " << round(sum1 * 100) / 100 << endl;      //выводим сумму всех сумм по строкам
	cout << "\nSumm of all coefs: " << round(sum2 * 100) / 100 << endl;		 //выводим сумму всех весовых коэффициентов

	return 0;
}